version: "3.8"

services:

  db:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/

  run_migrations:
    build: .
    env_file: .env
    environment:
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  api:
    build: .
    env_file: .env
    environment:
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
      run_migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./core:/opt/app/core/
      - ./todolist_diplom:/opt/app/todolist_diplom/


  collect_static:
    build: .
    env_file: .env
    command: python manage.py collectstatic -c --no-input
    volumes:
      - django_static:/opt/app/static/

  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_completed_successfully
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/

  bot:
    build: .
    env_file: .env
    environment:
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py runbot

volumes:
  pg_data:
  django_static:
